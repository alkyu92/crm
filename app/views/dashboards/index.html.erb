<div class="row">
    <div class="col-lg-8">
        <div class="media">
            <div class="media-left">
                <div style="padding-top: 20px;"></div>
                <%= letter_avatar_tag('Dashboard', 50, class: "media-object") %>
            </div>
            <div class="media-body">
                <h3>Dashboard<br>
                    <small>Overviews</small>
                </h3>
            </div>
        </div>
    </div>
    <div class="col-lg-4">
        <h5>Time now</h5>
        <h4>
            <div id="myClock" style="padding-bottom: 10px;"></div>
            <div id="jpClock"></div>
        </h4>
    </div>
</div>

<hr>
<h3>Insights</h3>
<br>
<div class="row">
    <div class="col-lg-4">
        <%= render 'dashboards/dashboard_topwon' %>
    </div>
    <div class="col-lg-4">
        <%= render 'dashboards/dashboard_toploss' %>
    </div>
    <div class="col-lg-4">
        <%= render 'dashboards/dashboard_lossreason' %>
    </div>
</div>
<hr>
<div class="row">
    <div class="col-lg-4 text-center">
        <h4>Overall Opportunity Won-Loss Chart</h4>
        <canvas id="opportunity-chart" width="400" height="400"></canvas>
        <h3>
          <small>Total</small>
          <strong>
            RM<%= sprintf('%.2f' % (@opwon_sum + @oploss_sum)) %>
          </strong>
        </h3>
        <h4>
          <small>Total Won</small>
          RM<%= sprintf('%.2f' % @opwon_sum) %>
        </h4>
        <h4>
          <small>Total Loss</small>
          RM<%= sprintf('%.2f' % @oploss_sum) %>
        </h4>
        <h4>
          <small>Total Open</small>
          RM<%= sprintf('%.2f' % @opopen_sum) %>
        </h4>
        <h4>
          <small>Total Approved</small>
          RM<%= sprintf('%.2f' % @opaprv_sum) %>
        </h4>
    </div>
    <div class="col-lg-4">
        <h4 class="text-center"><strong>Closed-Won Status</strong> Value by Account</h4>
        <canvas id="won-chart" width="400" height="400"></canvas>
        <hr>
        <h4 class="text-center"><strong>Open Status</strong> Value by Account</h4>
        <canvas id="open-chart" width="400" height="400"></canvas>
    </div>
    <div class="col-lg-4">
        <h4 class="text-center"><strong>Closed-Loss Status</strong> Value by Account</h4>
        <canvas id="loss-chart" width="400" height="400"></canvas>
        <hr>
        <h4 class="text-center"><strong>Approved Status</strong> Value by Account</h4>
        <canvas id="approved-chart" width="400" height="400"></canvas>
    </div>
</div>

<hr>
<h3>Activities</h3>
<br>
<div class="row">
    <div class="col-lg-4">
        <%= render 'dashboards/dashboard_tasks' %>
    </div>
    <div class="col-lg-4">

        <%= render 'dashboards/dashboard_calls' %>

    </div>
    <div class="col-lg-4">
        <%= render 'dashboards/dashboard_events' %>
    </div>
</div>

<hr>

<div class="row">
    <div class="col-lg-4">
        <%= render 'dashboards/dashboard_accounts' %>
    </div>
    <div class="col-lg-4">
        <%= render 'dashboards/dashboard_opportunities' %>
    </div>
    <div class="col-lg-4">
        <%= render 'dashboards/dashboard_cases' %>
    </div>
</div>

<div class="row">
    <div class="col-lg-4">
        <%= render 'dashboards/dashboard_contacts' %>
        <%= render 'dashboards/dashboard_cases_status' %>
    </div>
    <div class="col-lg-8">
        <%= render 'dashboards/dashboard_opportunities_status' %>
    </div>
</div>

<script>
    var month = [
        'January',
        'February',
        'March',
        'April',
        'May',
        'June',
        'July',
        'August',
        'September',
        'October',
        'November',
        'Disember'
    ]

    function myClock() {

        var timeNow = new Date();

        var timeDate = timeNow.getDate();
        var timeMonth = month[timeNow.getMonth()];
        var timeYear = timeNow.getFullYear();

        var timeHours = timeNow.getHours();
        var timeMinutes = timeNow.getMinutes();
        var timeSeconds = timeNow.getSeconds();

        var myTimeClock = timeDate + " " + timeMonth + " " + timeYear + " " + ("0" + timeHours).slice(-2) + ":" + ("0" + timeMinutes).slice(-2) + ":" + ("0" + timeSeconds).slice(-2);

        var jpTimeClock = timeDate + " " + timeMonth + " " + timeYear + " " + ("0" + (timeHours + 1)).slice(-2) + ":" + ("0" + timeMinutes).slice(-2) + ":" + ("0" + timeSeconds).slice(-2);

        var myClock = myTimeClock + " MY";
        var jpClock = jpTimeClock + " JP";

        $('#myClock').html(myClock);
        $('#jpClock').html(jpClock)
    }

    $(document).ready(function () {
        setInterval('myClock()', 1000);
    });

    var ctx = document.getElementById('opportunity-chart').getContext('2d');
    var myChart = new Chart(ctx, {
        type: 'pie',
        data: {
            labels: [
                "Won", "Loss", "Open", "Approved"
            ],
            datasets: [
                {
                    data: [
                        gon.opwon_sum,
                        gon.oploss_sum,
                        gon.opopen_sum,
                        gon.opaprv_sum
                    ],
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.2)',
                        'rgba(54, 162, 235, 0.2)',
                        'rgba(54, 62, 235, 0.2)',
                        'rgba(254, 162, 35, 0.2)'
                    ],
                    borderColor: [
                        'rgba(255, 99, 132, 1)',
                        'rgba(54, 162, 235, 1)',
                        'rgba(54, 62, 235, 1)',
                        'rgba(254, 162, 35, 1)'
                    ],
                    borderWidth: 1
                }
            ]
        },
        options: {
          tooltips: {
            callbacks: {
        title: function(tooltipItem, data) {
          return data['labels'][tooltipItem[0]['index']];
        },
        label: function(tooltipItem, data) {
          return 'RM' + data['datasets'][0]['data'][tooltipItem['index']];
        },
        afterLabel: function(tooltipItem, data) {
          var dataset = data['datasets'][0];
          var percent = Math.round((dataset['data'][tooltipItem['index']] / dataset["_meta"][0]['total']) * 100)
          return '(' + percent + '%)';
        }
      }
          }
        }
    });

    var bgColor = [
      'rgba(255, 99, 132, 0.2)',
      'rgba(54, 162, 235, 0.2)',
      'rgba(55, 99, 132, 0.2)',
      'rgba(54, 62, 235, 0.2)',
      'rgba(255, 99, 32, 0.2)',
      'rgba(254, 162, 235, 0.2)'
    ];
    var bdrColor = [
      'rgba(255, 99, 132, 1)',
      'rgba(54, 162, 235, 1)',
      'rgba(55, 99, 132, 1)',
      'rgba(54, 62, 235, 1)',
      'rgba(255, 99, 32, 1)',
      'rgba(254, 162, 235, 1)'
    ];

    var acc_won_hash = gon.acc_won_hash;
    var acc_won_name = [];
    var acc_won_count = [];

    for (var i = 0; i < acc_won_hash.length; i++) {
        acc_won_name.push(acc_won_hash[i][0]);
        acc_won_count.push(acc_won_hash[i][1]);
    }

    var wondata = {
        labels: acc_won_name,
        datasets: [
            {
                data: acc_won_count,
                backgroundColor: bgColor,
                borderColor: bdrColor,
                borderWidth: 1
            }
        ]
    };

    var acc_loss_hash = gon.acc_loss_hash;
    var acc_loss_name = [];
    var acc_loss_count = [];

    for (var i = 0; i < acc_loss_hash.length; i++) {
        acc_loss_name.push(acc_loss_hash[i][0]);
        acc_loss_count.push(acc_loss_hash[i][1]);
    }

    var lossdata = {
        labels: acc_loss_name,
        datasets: [
            {
                data: acc_loss_count,
                backgroundColor: bgColor,
                borderColor: bdrColor,
                borderWidth: 1
            }
        ]
    };

    var acc_open_hash = gon.acc_open_hash;
    var acc_open_name = [];
    var acc_open_count = [];

    for (var i = 0; i < acc_open_hash.length; i++) {
        acc_open_name.push(acc_open_hash[i][0]);
        acc_open_count.push(acc_open_hash[i][1]);
    }

    var opendata = {
        labels: acc_open_name,
        datasets: [
            {
                data: acc_open_count,
                backgroundColor: bgColor,
                borderColor: bdrColor,
                borderWidth: 1
            }
        ]
    };

    var acc_approved_hash = gon.acc_approved_hash;
    var acc_approved_name = [];
    var acc_approved_count = [];

    for (var i = 0; i < acc_approved_hash.length; i++) {
        acc_approved_name.push(acc_approved_hash[i][0]);
        acc_approved_count.push(acc_approved_hash[i][1]);
    }

    var aprvdata = {
        labels: acc_approved_name,
        datasets: [
            {
                data: acc_approved_count,
                backgroundColor: bgColor,
                borderColor: bdrColor,
                borderWidth: 1
            }
        ]
    };

    var optiondata = {
      tooltips: {
    callbacks: {
        label: function(tooltipItem) {
            return "RM" + tooltipItem.yLabel;
        }
    }
},
        legend: {
            display: false
        },
        scales: {
            yAxes: [
                {
                    scaleLabel: {
                        display: true,
                        labelString: 'Value of Opportunity (RM)'
                    },
                    ticks: {
                        beginAtZero: true
                    }
                }
            ],
            xAxes: [
                {
                    scaleLabel: {
                        display: true,
                        labelString: 'Account Name'
                    },
                    ticks: {
                        beginAtZero: true,
                        autoSkip: false,
                        minRotation: 90,
                        maxRotation: 90
                    }
                }
            ]
        }
    }

    var ctx = document.getElementById('won-chart').getContext('2d');
    var myChart = new Chart(ctx, {
        type: 'bar',
        data: wondata,
        options: optiondata
    });

    var ctx = document.getElementById('loss-chart').getContext('2d');
    var myChart = new Chart(ctx, {
        type: 'bar',
        data: lossdata,
        options: optiondata
    });

    var ctx = document.getElementById('open-chart').getContext('2d');
    var myChart = new Chart(ctx, {
        type: 'bar',
        data: opendata,
        options: optiondata
    });

    var ctx = document.getElementById('approved-chart').getContext('2d');
    var myChart = new Chart(ctx, {
        type: 'bar',
        data: aprvdata,
        options: optiondata
    });
</script>
